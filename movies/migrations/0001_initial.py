# Generated by Django 4.2.7 on 2025-10-12 15:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=100, verbose_name='Название')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Original genre name from TMDB (e.g., Action)', max_length=100, unique=True, verbose_name='Название (EN)')),
                ('name_uz', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name_uz'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=300, verbose_name='Название')),
                ('original_title', models.CharField(blank=True, max_length=300, verbose_name='Оригинальное название')),
                ('slug', models.SlugField(max_length=300, unique=True, verbose_name='URL')),
                ('description_uz', models.TextField(blank=True, verbose_name='Описание')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/', verbose_name='Постер')),
                ('backdrop', models.ImageField(blank=True, null=True, upload_to='backdrops/', verbose_name='Фон')),
                ('video_file', models.FileField(blank=True, help_text='Загрузите основной файл фильма', null=True, upload_to='movies/', verbose_name='Файл фильма')),
                ('trailer_url', models.URLField(blank=True, help_text='YouTube или Vimeo URL', verbose_name='URL Трейлера')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='Год выпуска')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Длительность (мин)')),
                ('content_type', models.CharField(choices=[('movie', 'Фильм'), ('series', 'Сериал'), ('cartoon', 'Мультфильм')], default='movie', max_length=20, verbose_name='Тип контента')),
                ('rating_avg', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Средний рейтинг')),
                ('rating_count', models.IntegerField(default=0, verbose_name='Количество оценок')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('is_featured', models.BooleanField(default=False, help_text='Показывать в слайдере на главной', verbose_name='Рекомендуемое')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('tmdb_id', models.IntegerField(blank=True, null=True, verbose_name='TMDB ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='persons/', verbose_name='Фото')),
                ('role', models.CharField(choices=[('actor', 'Актер'), ('director', 'Режиссер'), ('writer', 'Сценарист'), ('producer', 'Продюсер')], default='actor', max_length=20, verbose_name='Роль')),
                ('bio_uz', models.TextField(blank=True, verbose_name='Биография')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('tmdb_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='TMDB ID')),
            ],
            options={
                'verbose_name': 'Персона',
                'verbose_name_plural': 'Персоны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('about', 'О нас'), ('contacts', 'Контакты'), ('rules', 'Правила'), ('privacy', 'Конфиденциальность')], max_length=20, unique=True, verbose_name='Тип страницы')),
                ('title_uz', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('content_uz', models.TextField(verbose_name='Содержание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Статическая страница',
                'verbose_name_plural': 'Статические страницы',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=300, verbose_name='Название')),
                ('original_title', models.CharField(blank=True, max_length=300, verbose_name='Оригинальное название')),
                ('slug', models.SlugField(max_length=300, unique=True, verbose_name='URL')),
                ('description_uz', models.TextField(blank=True, verbose_name='Описание')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/', verbose_name='Постер')),
                ('backdrop', models.ImageField(blank=True, null=True, upload_to='backdrops/', verbose_name='Фон')),
                ('video_file', models.FileField(blank=True, help_text='Загрузите основной файл фильма', null=True, upload_to='movies/', verbose_name='Файл фильма')),
                ('trailer_url', models.URLField(blank=True, help_text='YouTube или Vimeo URL', verbose_name='URL Трейлера')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)], verbose_name='Год выпуска')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Длительность (мин)')),
                ('content_type', models.CharField(choices=[('movie', 'Фильм'), ('series', 'Сериал'), ('cartoon', 'Мультфильм')], default='movie', max_length=20, verbose_name='Тип контента')),
                ('rating_avg', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Средний рейтинг')),
                ('rating_count', models.IntegerField(default=0, verbose_name='Количество оценок')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('is_featured', models.BooleanField(default=False, help_text='Показывать в слайдере на главной', verbose_name='Рекомендуемое')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('tmdb_id', models.IntegerField(blank=True, null=True, verbose_name='TMDB ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('seasons_count', models.IntegerField(default=1, verbose_name='Количество сезонов')),
                ('status', models.CharField(choices=[('ongoing', 'В производстве'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='ongoing', max_length=20, verbose_name='Статус')),
                ('actors', models.ManyToManyField(blank=True, limit_choices_to={'role': 'actor'}, related_name='%(class)s_acted', to='movies.person', verbose_name='Актеры')),
                ('countries', models.ManyToManyField(related_name='%(class)s_set', to='movies.country', verbose_name='Страны')),
                ('directors', models.ManyToManyField(blank=True, limit_choices_to={'role': 'director'}, related_name='%(class)s_directed', to='movies.person', verbose_name='Режиссеры')),
                ('genres', models.ManyToManyField(related_name='%(class)s_set', to='movies.genre', verbose_name='Жанры')),
            ],
            options={
                'verbose_name': 'Сериал',
                'verbose_name_plural': 'Сериалы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.IntegerField(verbose_name='Номер сезона')),
                ('title_uz', models.CharField(blank=True, max_length=200, verbose_name='Название')),
                ('description_uz', models.TextField(blank=True, verbose_name='Описание')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='seasons/', verbose_name='Постер')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='movies.series', verbose_name='Сериал')),
            ],
            options={
                'verbose_name': 'Сезон',
                'verbose_name_plural': 'Сезоны',
                'ordering': ['series', 'season_number'],
                'unique_together': {('series', 'season_number')},
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_uz', models.CharField(max_length=300, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=300, unique=True, verbose_name='URL')),
                ('content_uz', models.TextField(verbose_name='Содержание')),
                ('image', models.ImageField(upload_to='news/', verbose_name='Изображение')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('related_movies', models.ManyToManyField(blank=True, to='movies.movie', verbose_name='Связанные фильмы')),
                ('related_series', models.ManyToManyField(blank=True, to='movies.series', verbose_name='Связанные сериалы')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='actors',
            field=models.ManyToManyField(blank=True, limit_choices_to={'role': 'actor'}, related_name='%(class)s_acted', to='movies.person', verbose_name='Актеры'),
        ),
        migrations.AddField(
            model_name='movie',
            name='countries',
            field=models.ManyToManyField(related_name='%(class)s_set', to='movies.country', verbose_name='Страны'),
        ),
        migrations.AddField(
            model_name='movie',
            name='directors',
            field=models.ManyToManyField(blank=True, limit_choices_to={'role': 'director'}, related_name='%(class)s_directed', to='movies.person', verbose_name='Режиссеры'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(related_name='%(class)s_set', to='movies.genre', verbose_name='Жанры'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('movie', 'Фильм'), ('series', 'Сериал')], max_length=20)),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='movies.movie')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='movies.comment', verbose_name='Родительский комментарий')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='movies.series')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('movie', 'Фильм'), ('series', 'Сериал')], max_length=20)),
                ('score', models.IntegerField(help_text='От 1 до 5 звезд', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата оценки')),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.movie')),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.series')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
                'unique_together': {('user', 'content_type', 'movie', 'series')},
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_number', models.IntegerField(verbose_name='Номер эпизода')),
                ('title_uz', models.CharField(max_length=200, verbose_name='Название')),
                ('description_uz', models.TextField(blank=True, verbose_name='Описание')),
                ('video_url', models.URLField(blank=True, verbose_name='URL Видео')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Длительность (мин)')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Дата выхода')),
                ('still_image', models.ImageField(blank=True, null=True, upload_to='episodes/', verbose_name='Кадр')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movies.season', verbose_name='Сезон')),
            ],
            options={
                'verbose_name': 'Эпизод',
                'verbose_name_plural': 'Эпизоды',
                'ordering': ['season', 'episode_number'],
                'unique_together': {('season', 'episode_number')},
            },
        ),
    ]
